# k8s/infrastructure/kafdrop-k8s.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafdrop-deployment
  labels:
    app: kafdrop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafdrop
  template:
    metadata:
      labels:
        app: kafdrop
    spec:
      containers:
      - name: kafdrop-container
        image: obsidiandynamics/kafdrop
        ports:
        - containerPort: 9000 # พอร์ตที่ Kafdrop UI ฟังอยู่
          name: http-port
        env:
        - name: KAFKA_BROKER_CONNECT
          value: "kafka-service:29092" # <<--- ชี้ไปที่ Kafka Service (internal listener)
        - name: JVM_OPTS
          value: "-Xms32M -Xmx64M"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        readinessProbe: # Healthcheck สำหรับ Kafdrop
          httpGet:
            path: /
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe: # Healthcheck สำหรับ Kafdrop
          httpGet:
            path: /
            port: 9000
          initialDelaySeconds: 20
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kafdrop-service # <<--- ชื่อ Service ที่จะใช้เข้าถึง Kafdrop
  labels:
    app: kafdrop
spec:
  selector:
    app: kafdrop
  ports:
    - protocol: TCP
      port: 80 # Port ที่ Service จะเปิดใน Cluster สำหรับ UI
      targetPort: http-port
  type: ClusterIP # หรือ NodePort/LoadBalancer ถ้าต้องการ Expose Kafdrop ภายนอก K8s
