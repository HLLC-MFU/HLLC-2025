# k8s/infrastructure/redis-k8s.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  replicas: 1 # Redis ต้องการ 1 Replica สำหรับ Stateful Applications
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis-container
        image: redis:latest
        ports:
        - containerPort: 6379
          name: redis-port
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        volumeMounts:
        - name: redis-data-volume
          mountPath: /data # Path ภายใน Container ที่ Redis ใช้เก็บข้อมูล
        readinessProbe: # Healthcheck สำหรับ Redis
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        livenessProbe: # Healthcheck สำหรับ Redis
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
      volumes:
      - name: redis-data-volume
        persistentVolumeClaim:
          claimName: redis-pvc # อ้างอิง PVC ที่จะสร้าง